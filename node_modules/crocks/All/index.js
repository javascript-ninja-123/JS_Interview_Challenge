/** @license ISC License (c) copyright 2016 original and current authors */
/** @author Ian Hofmann-Hicks (evil) */

var _implements = require('../core/implements')
var _inspect = require('../core/inspect')
var type = require('../core/types').type('All')

var isFunction = require('../core/isFunction')
var isNil = require('../core/isNil')
var isSameType = require('../core/isSameType')

var _empty =
  function () { return All(true); }

function All(b) {
  var x = isNil(b) ? _empty().valueOf() : b

  if(!arguments.length || isFunction(x)) {
    throw new TypeError('All: Non-function value required')
  }

  var valueOf =
    function () { return !!x; }

  var empty =
    _empty

  var inspect =
    function () { return ("All" + (_inspect(valueOf()))); }

  function concat(m) {
    if(!isSameType(All, m)) {
      throw new TypeError('All.concat: All required')
    }

    return All(m.valueOf() && valueOf())
  }

  return { inspect: inspect, valueOf: valueOf, type: type, concat: concat, empty: empty }
}

All['@@implements'] = _implements(
  [ 'concat', 'empty' ]
)

All.empty =
  _empty

All.type =
  type

module.exports = All
